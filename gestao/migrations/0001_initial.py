# Generated by Django 5.2.1 on 2025-08-12 11:31

import ckeditor_uploader.fields
import datetime
import django.db.models.deletion
import gestao.encoders
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaProcesso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da Área')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo / Razão Social')),
                ('tipo_pessoa', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], default='PF', max_length=2, verbose_name='Tipo de Pessoa')),
                ('cpf_cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CPF/CNPJ')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail')),
                ('telefone_principal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Principal')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('nacionalidade', models.CharField(blank=True, default='Brasileiro(a)', max_length=100, null=True, verbose_name='Nacionalidade')),
                ('estado_civil', models.CharField(blank=True, choices=[('SOLTEIRO', 'Solteiro(a)'), ('CASADO', 'Casado(a)'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUVO', 'Viúvo(a)'), ('UNIAO_ESTAVEL', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('profissao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Profissão')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro (Rua, Av.)')),
                ('numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='Estado (UF)')),
                ('representante_legal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Representante Legal')),
                ('cpf_representante_legal', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF do Representante')),
                ('is_cliente', models.BooleanField(default=True, verbose_name='É um cliente?')),
                ('data_cadastro', models.DateField(auto_now_add=True, db_index=True, null=True, verbose_name='Data de Cadastro')),
            ],
            options={
                'ordering': ['nome_completo'],
            },
        ),
        migrations.CreateModel(
            name='EscritorioConfiguracao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_escritorio', models.CharField(max_length=255, verbose_name='Nome do Escritório')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, verbose_name='CNPJ')),
                ('inscricao_municipal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Municipal')),
                ('oab_principal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição OAB Principal')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro')),
                ('numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='UF')),
                ('telefone_contato', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone de Contato')),
                ('email_contato', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail de Contato')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
            ],
            options={
                'verbose_name': 'Configuração do Escritório',
                'verbose_name_plural': 'Configurações do Escritório',
            },
        ),
        migrations.CreateModel(
            name='ModeloDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título do Modelo')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição / Instruções de Uso')),
                ('cabecalho', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Cabeçalho')),
                ('conteudo', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Corpo do Documento')),
                ('rodape', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Rodapé')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_modificacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Modelo de Documento',
                'verbose_name_plural': 'Modelos de Documentos',
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='TipoMovimentacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True, verbose_name='Nome do Tipo de Movimentação')),
                ('sugestao_dias_prazo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sugestão de Dias para Prazo')),
                ('tipo_contagem_prazo', models.CharField(choices=[('UTEIS', 'Dias Úteis'), ('CORRIDOS', 'Dias Corridos')], default='UTEIS', help_text='Define se o prazo deve ser contado em dias úteis ou corridos.', max_length=10, verbose_name='Tipo de Contagem do Prazo')),
                ('fase_processual_sugerida', models.CharField(blank=True, choices=[('POSTULATORIA', 'Postulatória'), ('INSTRUTORIA', 'Instrutória'), ('DECISORIA', 'Decisória'), ('RECURSAL', 'Recursal'), ('EXECUCAO', 'Execução'), ('ARQUIVAMENTO', 'Arquivamento')], help_text='Associe este tipo de movimentação a uma fase do processo para facilitar a seleção.', max_length=30, null=True, verbose_name='Fase Processual Padrão')),
                ('dias_antecedencia_lembrete', models.PositiveIntegerField(blank=True, help_text='Ex: 3. O sistema poderá usar este valor para criar um lembrete 3 dias antes do prazo final.', null=True, verbose_name='Antecedência para Lembrete (dias)')),
                ('favorito', models.BooleanField(default=False, help_text='Marque para que este tipo apareça no topo das listas de seleção.', verbose_name='Favorito')),
            ],
            options={
                'ordering': ['-favorito', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome do Serviço')),
            ],
        ),
        migrations.CreateModel(
            name='CalculoJudicial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição do Cálculo')),
                ('data_inicial_global', models.DateField(blank=True, null=True, verbose_name='Data Inicial Global')),
                ('data_final_global', models.DateField(blank=True, null=True, verbose_name='Data Final Global')),
                ('pro_rata', models.BooleanField(default=True, verbose_name='Calcular Correção Pro Rata')),
                ('mostrar_memoria', models.BooleanField(default=True, verbose_name='Mostrar Memória de Cálculo')),
                ('valor_final_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Final Calculado')),
                ('memoria_calculo_json', models.JSONField(blank=True, encoder=gestao.encoders.DecimalEncoder, null=True, verbose_name='Memória de Cálculo (JSON)')),
                ('teste', models.CharField(blank=True, max_length=10, null=True)),
                ('data_calculo', models.DateTimeField(auto_now_add=True)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cálculo Judicial',
                'verbose_name_plural': 'Cálculos Judiciais',
                'ordering': ['-data_calculo'],
            },
        ),
        migrations.CreateModel(
            name='CalculoCorrecao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indice', models.CharField(choices=[('IPCA', 'IPCA (IBGE)'), ('INPC', 'INPC (IBGE)'), ('IGP-M', 'IGP-M (FGV/BCB)'), ('IGP-DI', 'IGP-DI (FGV/BCB)'), ('SELIC', 'Taxa Selic (BCB)')], max_length=50)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('aplicar_em', models.CharField(default='todos', help_text="'todos' ou IDs dos lançamentos separados por vírgula", max_length=255)),
                ('calculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='correcoes', to='gestao.calculojudicial')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CalculoJuros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('MORATORIO', 'Moratório'), ('REMUNERATORIO', 'Remuneratório')], max_length=20)),
                ('taxa', models.DecimalField(decimal_places=4, max_digits=7, verbose_name='Taxa (%)')),
                ('periodicidade', models.CharField(choices=[('DIA', 'Ao Dia'), ('MES', 'Ao Mês'), ('ANO', 'Ao Ano')], max_length=3)),
                ('capitalizacao', models.CharField(choices=[('SIMPLES', 'Simples'), ('COMPOSTO', 'Composto')], max_length=8)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('aplicar_em', models.CharField(default='todos', help_text="'todos' ou IDs dos lançamentos separados por vírgula", max_length=255)),
                ('calculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='juros', to='gestao.calculojudicial')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CalculoLancamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('CREDITO', 'Crédito'), ('DEBITO', 'Débito')], max_length=7)),
                ('descricao', models.CharField(blank=True, max_length=255, null=True)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=15)),
                ('calculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lancamentos', to='gestao.calculojudicial')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ContratoHonorarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('descricao', models.CharField(default='Honorários Contratuais', max_length=255)),
                ('valor_pagamento_fixo', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor de Cada Pagamento (R$)')),
                ('qtde_pagamentos_fixos', models.PositiveIntegerField(default=1, verbose_name='Qtde. de Pagamentos Fixos')),
                ('data_primeiro_vencimento', models.DateField(verbose_name='Data do Primeiro Vencimento')),
                ('percentual_exito', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentual de Êxito (%)')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contratos_honorarios_cliente', to='gestao.cliente')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='FaseCalculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.PositiveIntegerField(default=1)),
                ('data_inicio', models.DateField(verbose_name='Data de Início da Fase')),
                ('data_fim', models.DateField(verbose_name='Data de Fim da Fase')),
                ('indice', models.CharField(choices=[('IPCA', 'IPCA (IBGE)'), ('INPC', 'INPC (IBGE)'), ('IGP-M', 'IGP-M (FGV/BCB)'), ('IGP-DI', 'IGP-DI (FGV/BCB)'), ('SELIC', 'Taxa Selic (BCB)'), ('TR', 'Taxa Referencial (BCB)')], max_length=50, verbose_name='Índice de Correção')),
                ('juros_taxa', models.DecimalField(decimal_places=2, default=0, max_digits=7, verbose_name='Taxa de Juros Mensal (%)')),
                ('juros_tipo', models.CharField(choices=[('SIMPLES', 'Simples'), ('COMPOSTO', 'Compostos')], default='SIMPLES', max_length=20, verbose_name='Tipo de Juros')),
                ('observacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observação da Fase')),
                ('calculo_judicial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fases', to='gestao.calculojudicial')),
            ],
            options={
                'ordering': ['calculo_judicial', 'ordem'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAreaProcesso',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(db_index=True, max_length=100, verbose_name='Nome da Área')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical area processo',
                'verbose_name_plural': 'historical area processos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCliente',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255, verbose_name='Nome Completo / Razão Social')),
                ('tipo_pessoa', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], default='PF', max_length=2, verbose_name='Tipo de Pessoa')),
                ('cpf_cnpj', models.CharField(blank=True, db_index=True, max_length=18, null=True, verbose_name='CPF/CNPJ')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail')),
                ('telefone_principal', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone Principal')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('nacionalidade', models.CharField(blank=True, default='Brasileiro(a)', max_length=100, null=True, verbose_name='Nacionalidade')),
                ('estado_civil', models.CharField(blank=True, choices=[('SOLTEIRO', 'Solteiro(a)'), ('CASADO', 'Casado(a)'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUVO', 'Viúvo(a)'), ('UNIAO_ESTAVEL', 'União Estável')], max_length=20, null=True, verbose_name='Estado Civil')),
                ('profissao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Profissão')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('logradouro', models.CharField(blank=True, max_length=255, null=True, verbose_name='Logradouro (Rua, Av.)')),
                ('numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, null=True, verbose_name='Estado (UF)')),
                ('representante_legal', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Representante Legal')),
                ('cpf_representante_legal', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF do Representante')),
                ('is_cliente', models.BooleanField(default=True, verbose_name='É um cliente?')),
                ('data_cadastro', models.DateField(blank=True, db_index=True, editable=False, null=True, verbose_name='Data de Cadastro')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical cliente',
                'verbose_name_plural': 'historical clientes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContratoHonorarios',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('descricao', models.CharField(default='Honorários Contratuais', max_length=255)),
                ('valor_pagamento_fixo', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor de Cada Pagamento (R$)')),
                ('qtde_pagamentos_fixos', models.PositiveIntegerField(default=1, verbose_name='Qtde. de Pagamentos Fixos')),
                ('data_primeiro_vencimento', models.DateField(verbose_name='Data do Primeiro Vencimento')),
                ('percentual_exito', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentual de Êxito (%)')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.cliente')),
                ('content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical contrato honorarios',
                'verbose_name_plural': 'historical contrato honorarioss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoAcao',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Tipo de Ação/Classe Processual')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('area', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.areaprocesso')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tipo acao',
                'verbose_name_plural': 'historical tipo acaos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoMovimentacao',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(db_index=True, max_length=200, verbose_name='Nome do Tipo de Movimentação')),
                ('sugestao_dias_prazo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sugestão de Dias para Prazo')),
                ('tipo_contagem_prazo', models.CharField(choices=[('UTEIS', 'Dias Úteis'), ('CORRIDOS', 'Dias Corridos')], default='UTEIS', help_text='Define se o prazo deve ser contado em dias úteis ou corridos.', max_length=10, verbose_name='Tipo de Contagem do Prazo')),
                ('fase_processual_sugerida', models.CharField(blank=True, choices=[('POSTULATORIA', 'Postulatória'), ('INSTRUTORIA', 'Instrutória'), ('DECISORIA', 'Decisória'), ('RECURSAL', 'Recursal'), ('EXECUCAO', 'Execução'), ('ARQUIVAMENTO', 'Arquivamento')], help_text='Associe este tipo de movimentação a uma fase do processo para facilitar a seleção.', max_length=30, null=True, verbose_name='Fase Processual Padrão')),
                ('dias_antecedencia_lembrete', models.PositiveIntegerField(blank=True, help_text='Ex: 3. O sistema poderá usar este valor para criar um lembrete 3 dias antes do prazo final.', null=True, verbose_name='Antecedência para Lembrete (dias)')),
                ('favorito', models.BooleanField(default=False, help_text='Marque para que este tipo apareça no topo das listas de seleção.', verbose_name='Favorito')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tipo movimentacao',
                'verbose_name_plural': 'historical tipo movimentacaos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTipoServico',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(db_index=True, max_length=100, verbose_name='Nome do Serviço')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical tipo servico',
                'verbose_name_plural': 'historical tipo servicos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUsuarioPerfil',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
                ('oab', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nº da OAB (ex: 12345/PR)')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('data_admissao', models.DateField(blank=True, null=True, verbose_name='Data de Admissão')),
                ('foto', models.TextField(blank=True, max_length=100, null=True, verbose_name='Foto de Perfil')),
                ('cargo', models.CharField(blank=True, choices=[('ADVOGADO', 'Advogado(a)'), ('ESTAGIARIO', 'Estagiário(a)')], max_length=20, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical usuario perfil',
                'verbose_name_plural': 'historical usuario perfils',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LancamentoFinanceiro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Devido')),
                ('tipo', models.CharField(choices=[('RECEITA', 'Receita'), ('DESPESA', 'Despesa')], default='RECEITA', max_length=10)),
                ('data_vencimento', models.DateField()),
                ('categoria', models.CharField(blank=True, choices=[('HONORARIOS', 'Honorários'), ('TAXAS', 'Taxas Judiciais/Administrativas'), ('CUSTAS', 'Custas Processuais'), ('ALUGUEL', 'Aluguel'), ('SALARIO', 'Salário'), ('OUTROS', 'Outros')], default='OUTROS', max_length=50, null=True)),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lancamentos', to='gestao.cliente')),
                ('contrato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lancamentos', to='gestao.contratohonorarios')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalPagamento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('data_pagamento', models.DateField(default=datetime.date.today)),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=12)),
                ('forma_pagamento', models.CharField(blank=True, max_length=100, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lancamento', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.lancamentofinanceiro')),
            ],
            options={
                'verbose_name': 'historical pagamento',
                'verbose_name_plural': 'historical pagamentos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_pagamento', models.DateField(default=datetime.date.today)),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=12)),
                ('forma_pagamento', models.CharField(blank=True, max_length=100, null=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('lancamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagamentos', to='gestao.lancamentofinanceiro')),
            ],
        ),
        migrations.CreateModel(
            name='Processo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_processo', models.CharField(blank=True, help_text='Formato: 0000000-00.0000.0.00.0000', max_length=25, null=True, verbose_name='Número do Processo (CNJ)')),
                ('descricao_caso', models.TextField(blank=True, null=True, verbose_name='Assunto Principal / Descrição do Caso')),
                ('data_distribuicao', models.DateField(default=datetime.date.today, verbose_name='Data de Distribuição/Início')),
                ('fase', models.CharField(choices=[('POSTULATORIA', 'Postulatória'), ('INSTRUTORIA', 'Instrutória'), ('DECISORIA', 'Decisória'), ('RECURSAL', 'Recursal'), ('EXECUCAO', 'Execução'), ('ARQUIVAMENTO', 'Arquivamento')], default='POSTULATORIA', max_length=30, verbose_name='Fase Processual Atual')),
                ('status_processo', models.CharField(choices=[('ATIVO', 'Ativo'), ('SUSPENSO', 'Suspenso'), ('ARQUIVADO', 'Arquivado'), ('EXTINTO', 'Extinto'), ('EM_RECURSO', 'Em Recurso'), ('ENCERRADO', 'Encerrado com Resolução')], default='ATIVO', max_length=30, verbose_name='Situação do Processo')),
                ('valor_causa', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da Causa')),
                ('segredo_justica', models.BooleanField(default=False, verbose_name='Segredo de Justiça')),
                ('justica_gratuita', models.BooleanField(default=False, verbose_name='Justiça Gratuita')),
                ('prioridade_tramitacao', models.BooleanField(default=False, verbose_name='Prioridade na Tramitação')),
                ('tribunal', models.CharField(blank=True, choices=[('TJSP', 'TJSP'), ('TJPR', 'TJPR'), ('TJRS', 'TJRS'), ('TRF1', 'TRF-1'), ('TRF2', 'TRF-2'), ('TRF3', 'TRF-3'), ('TRF4', 'TRF-4'), ('TRF5', 'TRF-5'), ('TRF6', 'TRF-6'), ('TST', 'TST'), ('STJ', 'STJ'), ('STF', 'STF'), ('OUTRO', 'Outro')], max_length=10, null=True, verbose_name='Tribunal')),
                ('vara_comarca_orgao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Órgão Julgador (Vara/Comarca)')),
                ('juiz_responsavel', models.CharField(blank=True, max_length=200, null=True, verbose_name='Juiz Responsável')),
                ('grau_jurisdicao', models.CharField(choices=[('PRIMEIRO', '1º Grau'), ('SEGUNDO', '2º Grau'), ('SUPERIOR', 'Tribunal Superior')], default='PRIMEIRO', max_length=20, verbose_name='Grau de Jurisdição')),
                ('observacoes_internas', models.TextField(blank=True, null=True, verbose_name='Notas Internas (visível apenas para a equipe)')),
                ('numero_sei', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número SEI (se aplicável)')),
                ('numero_outro_sistema', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nº em Outro Sistema (PJe, etc.)')),
                ('link_acesso', models.URLField(blank=True, max_length=500, null=True, verbose_name='Link do Processo Eletrônico')),
                ('nivel_permissao', models.CharField(choices=[('PUBLICO', 'Público para a Equipe'), ('RESTRITO', 'Restrito ao Responsável e Envolvidos')], default='PUBLICO', max_length=20, verbose_name='Nível de Permissão')),
                ('resultado', models.CharField(blank=True, choices=[('PROCEDENTE', 'Procedente'), ('IMPROCEDENTE', 'Improcedente'), ('PARCIALMENTE', 'Parcialmente Procedente'), ('ACORDO', 'Acordo'), ('EXTINTO', 'Extinto sem mérito')], max_length=20, null=True, verbose_name='Resultado Final')),
                ('data_transito_em_julgado', models.DateField(blank=True, null=True, verbose_name='Data do Trânsito em Julgado')),
                ('execucao_iniciada', models.BooleanField(default=False, verbose_name='Execução Iniciada?')),
                ('valor_executado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Total Executado')),
                ('bloqueios_penhoras', models.JSONField(blank=True, help_text="Estrutura para registrar bloqueios. Ex: [{'sistema': 'SISBAJUD', 'valor': 1500.00}]", null=True, verbose_name='Bloqueios e Penhoras')),
                ('advogado_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processos_responsaveis', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Responsável')),
                ('advogados_envolvidos', models.ManyToManyField(blank=True, related_name='processos_envolvidos', to=settings.AUTH_USER_MODEL, verbose_name='Outros Colaboradores')),
            ],
        ),
        migrations.CreateModel(
            name='ParteProcesso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_participacao', models.CharField(choices=[('AUTOR', 'Polo Ativo'), ('REU', 'Polo Passivo'), ('TERCEIRO', 'Terceiro Interessado'), ('VITIMA', 'Vítima'), ('TESTEMUNHA', 'Testemunha')], max_length=20, verbose_name='Tipo de Participação')),
                ('is_cliente_do_processo', models.BooleanField(default=False, help_text='Marque esta opção se esta parte for o cliente do escritório neste processo específico.', verbose_name='É o cliente que representamos neste processo?')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participacoes', to='gestao.cliente')),
                ('representado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='representantes', to='gestao.parteprocesso')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partes', to='gestao.processo')),
            ],
            options={
                'ordering': ['tipo_participacao', 'cliente__nome_completo'],
                'unique_together': {('processo', 'cliente')},
            },
        ),
        migrations.AddField(
            model_name='lancamentofinanceiro',
            name='processo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lancamentos', to='gestao.processo'),
        ),
        migrations.CreateModel(
            name='Incidente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=100, verbose_name='Tipo de Incidente')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('ABERTO', 'Aberto'), ('RESOLVIDO', 'Resolvido'), ('PENDENTE', 'Pendente')], default='ABERTO', max_length=20, verbose_name='Status')),
                ('data_ocorrido', models.DateField(default=datetime.date.today, verbose_name='Data')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidentes', to='gestao.processo')),
            ],
            options={
                'ordering': ['-data_ocorrido'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalRecurso',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('APELACAO', 'Apelação'), ('AGRAVO', 'Agravo de Instrumento'), ('ESPECIAL', 'Recurso Especial'), ('EXTRAORDINARIO', 'Recurso Extraordinário'), ('OUTRO', 'Outro')], max_length=20, verbose_name='Tipo de Recurso')),
                ('data_interposicao', models.DateField(verbose_name='Data de Interposição')),
                ('resultado', models.CharField(blank=True, max_length=100, null=True, verbose_name='Resultado')),
                ('detalhes', models.TextField(blank=True, null=True, verbose_name='Detalhes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
            ],
            options={
                'verbose_name': 'historical recurso',
                'verbose_name_plural': 'historical recursos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParteProcesso',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tipo_participacao', models.CharField(choices=[('AUTOR', 'Polo Ativo'), ('REU', 'Polo Passivo'), ('TERCEIRO', 'Terceiro Interessado'), ('VITIMA', 'Vítima'), ('TESTEMUNHA', 'Testemunha')], max_length=20, verbose_name='Tipo de Participação')),
                ('is_cliente_do_processo', models.BooleanField(default=False, help_text='Marque esta opção se esta parte for o cliente do escritório neste processo específico.', verbose_name='É o cliente que representamos neste processo?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('representado_por', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.parteprocesso')),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
            ],
            options={
                'verbose_name': 'historical parte processo',
                'verbose_name_plural': 'historical parte processos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIncidente',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tipo', models.CharField(max_length=100, verbose_name='Tipo de Incidente')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('status', models.CharField(choices=[('ABERTO', 'Aberto'), ('RESOLVIDO', 'Resolvido'), ('PENDENTE', 'Pendente')], default='ABERTO', max_length=20, verbose_name='Status')),
                ('data_ocorrido', models.DateField(default=datetime.date.today, verbose_name='Data')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
            ],
            options={
                'verbose_name': 'historical incidente',
                'verbose_name_plural': 'historical incidentes',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocumento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título do Documento')),
                ('tipo_documento', models.CharField(choices=[('PETICAO', 'Petição'), ('OFICIO', 'Ofício'), ('CONTRATO', 'Contrato'), ('PROCURACAO', 'Procuração'), ('DECISAO', 'Decisão/Sentença'), ('PROVA', 'Prova'), ('OUTRO', 'Outro')], default='OUTRO', max_length=20, verbose_name='Tipo do Documento')),
                ('arquivo_upload', models.TextField(blank=True, help_text='Anexe o arquivo original (PDF, DOCX, etc).', max_length=100, null=True, verbose_name='Arquivo')),
                ('data_protocolo', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora do Protocolo')),
                ('conteudo', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Use para gerar petições no sistema. Para documentos externos, use o campo de upload.', null=True, verbose_name='Conteúdo Editável')),
                ('data_criacao', models.DateTimeField(blank=True, editable=False)),
                ('data_modificacao', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modelo_origem', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.modelodocumento', verbose_name='Gerado a partir do Modelo')),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
            ],
            options={
                'verbose_name': 'historical documento',
                'verbose_name_plural': 'historical documentos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCalculoJudicial',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição do Cálculo')),
                ('data_inicial_global', models.DateField(blank=True, null=True, verbose_name='Data Inicial Global')),
                ('data_final_global', models.DateField(blank=True, null=True, verbose_name='Data Final Global')),
                ('pro_rata', models.BooleanField(default=True, verbose_name='Calcular Correção Pro Rata')),
                ('mostrar_memoria', models.BooleanField(default=True, verbose_name='Mostrar Memória de Cálculo')),
                ('valor_final_calculado', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor Final Calculado')),
                ('memoria_calculo_json', models.JSONField(blank=True, encoder=gestao.encoders.DecimalEncoder, null=True, verbose_name='Memória de Cálculo (JSON)')),
                ('teste', models.CharField(blank=True, max_length=10, null=True)),
                ('data_calculo', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
            ],
            options={
                'verbose_name': 'historical Cálculo Judicial',
                'verbose_name_plural': 'historical Cálculos Judiciais',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título do Documento')),
                ('tipo_documento', models.CharField(choices=[('PETICAO', 'Petição'), ('OFICIO', 'Ofício'), ('CONTRATO', 'Contrato'), ('PROCURACAO', 'Procuração'), ('DECISAO', 'Decisão/Sentença'), ('PROVA', 'Prova'), ('OUTRO', 'Outro')], default='OUTRO', max_length=20, verbose_name='Tipo do Documento')),
                ('arquivo_upload', models.FileField(blank=True, help_text='Anexe o arquivo original (PDF, DOCX, etc).', null=True, upload_to='processos/documentos/%Y/%m/', verbose_name='Arquivo')),
                ('data_protocolo', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora do Protocolo')),
                ('conteudo', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Use para gerar petições no sistema. Para documentos externos, use o campo de upload.', null=True, verbose_name='Conteúdo Editável')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_modificacao', models.DateTimeField(auto_now=True)),
                ('modelo_origem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestao.modelodocumento', verbose_name='Gerado a partir do Modelo')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='gestao.processo')),
            ],
            options={
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.AddField(
            model_name='calculojudicial',
            name='processo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calculos', to='gestao.processo'),
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('APELACAO', 'Apelação'), ('AGRAVO', 'Agravo de Instrumento'), ('ESPECIAL', 'Recurso Especial'), ('EXTRAORDINARIO', 'Recurso Extraordinário'), ('OUTRO', 'Outro')], max_length=20, verbose_name='Tipo de Recurso')),
                ('data_interposicao', models.DateField(verbose_name='Data de Interposição')),
                ('resultado', models.CharField(blank=True, max_length=100, null=True, verbose_name='Resultado')),
                ('detalhes', models.TextField(blank=True, null=True, verbose_name='Detalhes')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recursos', to='gestao.processo')),
            ],
            options={
                'ordering': ['-data_interposicao'],
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição Detalhada do Serviço')),
                ('codigo_servico_municipal', models.CharField(blank=True, help_text='Ex: 01.07, 14.01, etc.', max_length=10, null=True, verbose_name='Cód. do Serviço Municipal (LC 116/03)')),
                ('data_inicio', models.DateField(default=datetime.date.today)),
                ('prazo', models.DateField(blank=True, null=True, verbose_name='Prazo de Conclusão')),
                ('concluido', models.BooleanField(default=False, verbose_name='Concluído')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento (para recorrentes)')),
                ('recorrente', models.BooleanField(default=False, verbose_name='É um serviço recorrente (mensal)?')),
                ('ativo', models.BooleanField(default=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servicos', to='gestao.cliente')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='servicos_responsaveis', to=settings.AUTH_USER_MODEL, verbose_name='Responsável pelo Serviço')),
                ('tipo_servico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='servicos', to='gestao.tiposervico')),
            ],
            options={
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='NotaFiscalServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PROCESSANDO', 'Em Processamento'), ('ACEITO', 'Aceito'), ('ERRO', 'Erro'), ('CANCELADO', 'Cancelado')], default='PROCESSANDO', max_length=20)),
                ('numero_nfse', models.CharField(blank=True, max_length=15, null=True, verbose_name='Número da NFS-e')),
                ('codigo_verificacao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código de Verificação')),
                ('data_emissao_nfse', models.DateTimeField(blank=True, null=True, verbose_name='Data de Emissão')),
                ('xml_enviado', models.TextField(blank=True, null=True)),
                ('xml_recebido', models.TextField(blank=True, null=True)),
                ('mensagem_retorno', models.TextField(blank=True, null=True)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_fiscais', to='gestao.servico')),
            ],
            options={
                'verbose_name': 'Nota Fiscal de Serviço',
                'verbose_name_plural': 'Notas Fiscais de Serviço',
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título / Resumo da Atividade')),
                ('detalhes', models.TextField(blank=True, null=True)),
                ('data_atividade', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDA', 'Concluída'), ('CANCELADA', 'Cancelada')], default='PENDENTE', max_length=20)),
                ('prazo_final', models.DateField(blank=True, null=True, verbose_name='Prazo Final')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes_servicos_responsaveis', to=settings.AUTH_USER_MODEL)),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacoes_servico', to='gestao.servico')),
            ],
        ),
        migrations.AddField(
            model_name='lancamentofinanceiro',
            name='servico',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lancamentos', to='gestao.servico'),
        ),
        migrations.CreateModel(
            name='HistoricalMovimentacaoServico',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título / Resumo da Atividade')),
                ('detalhes', models.TextField(blank=True, null=True)),
                ('data_atividade', models.DateField(default=datetime.date.today)),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDA', 'Concluída'), ('CANCELADA', 'Cancelada')], default='PENDENTE', max_length=20)),
                ('prazo_final', models.DateField(blank=True, null=True, verbose_name='Prazo Final')),
                ('data_criacao', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('servico', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.servico')),
            ],
            options={
                'verbose_name': 'historical movimentacao servico',
                'verbose_name_plural': 'historical movimentacao servicos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLancamentoFinanceiro',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor Devido')),
                ('tipo', models.CharField(choices=[('RECEITA', 'Receita'), ('DESPESA', 'Despesa')], default='RECEITA', max_length=10)),
                ('data_vencimento', models.DateField()),
                ('categoria', models.CharField(blank=True, choices=[('HONORARIOS', 'Honorários'), ('TAXAS', 'Taxas Judiciais/Administrativas'), ('CUSTAS', 'Custas Processuais'), ('ALUGUEL', 'Aluguel'), ('SALARIO', 'Salário'), ('OUTROS', 'Outros')], default='OUTROS', max_length=50, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.cliente')),
                ('contrato', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.contratohonorarios')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
                ('servico', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.servico')),
            ],
            options={
                'verbose_name': 'historical lancamento financeiro',
                'verbose_name_plural': 'historical lancamento financeiros',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TipoAcao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Tipo de Ação/Classe Processual')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tipos_de_acao', to='gestao.areaprocesso')),
            ],
        ),
        migrations.AddField(
            model_name='processo',
            name='tipo_acao',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processos', to='gestao.tipoacao', verbose_name='Classe Processual'),
        ),
        migrations.CreateModel(
            name='HistoricalProcesso',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('numero_processo', models.CharField(blank=True, help_text='Formato: 0000000-00.0000.0.00.0000', max_length=25, null=True, verbose_name='Número do Processo (CNJ)')),
                ('descricao_caso', models.TextField(blank=True, null=True, verbose_name='Assunto Principal / Descrição do Caso')),
                ('data_distribuicao', models.DateField(default=datetime.date.today, verbose_name='Data de Distribuição/Início')),
                ('fase', models.CharField(choices=[('POSTULATORIA', 'Postulatória'), ('INSTRUTORIA', 'Instrutória'), ('DECISORIA', 'Decisória'), ('RECURSAL', 'Recursal'), ('EXECUCAO', 'Execução'), ('ARQUIVAMENTO', 'Arquivamento')], default='POSTULATORIA', max_length=30, verbose_name='Fase Processual Atual')),
                ('status_processo', models.CharField(choices=[('ATIVO', 'Ativo'), ('SUSPENSO', 'Suspenso'), ('ARQUIVADO', 'Arquivado'), ('EXTINTO', 'Extinto'), ('EM_RECURSO', 'Em Recurso'), ('ENCERRADO', 'Encerrado com Resolução')], default='ATIVO', max_length=30, verbose_name='Situação do Processo')),
                ('valor_causa', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da Causa')),
                ('segredo_justica', models.BooleanField(default=False, verbose_name='Segredo de Justiça')),
                ('justica_gratuita', models.BooleanField(default=False, verbose_name='Justiça Gratuita')),
                ('prioridade_tramitacao', models.BooleanField(default=False, verbose_name='Prioridade na Tramitação')),
                ('tribunal', models.CharField(blank=True, choices=[('TJSP', 'TJSP'), ('TJPR', 'TJPR'), ('TJRS', 'TJRS'), ('TRF1', 'TRF-1'), ('TRF2', 'TRF-2'), ('TRF3', 'TRF-3'), ('TRF4', 'TRF-4'), ('TRF5', 'TRF-5'), ('TRF6', 'TRF-6'), ('TST', 'TST'), ('STJ', 'STJ'), ('STF', 'STF'), ('OUTRO', 'Outro')], max_length=10, null=True, verbose_name='Tribunal')),
                ('vara_comarca_orgao', models.CharField(blank=True, max_length=255, null=True, verbose_name='Órgão Julgador (Vara/Comarca)')),
                ('juiz_responsavel', models.CharField(blank=True, max_length=200, null=True, verbose_name='Juiz Responsável')),
                ('grau_jurisdicao', models.CharField(choices=[('PRIMEIRO', '1º Grau'), ('SEGUNDO', '2º Grau'), ('SUPERIOR', 'Tribunal Superior')], default='PRIMEIRO', max_length=20, verbose_name='Grau de Jurisdição')),
                ('observacoes_internas', models.TextField(blank=True, null=True, verbose_name='Notas Internas (visível apenas para a equipe)')),
                ('numero_sei', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número SEI (se aplicável)')),
                ('numero_outro_sistema', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nº em Outro Sistema (PJe, etc.)')),
                ('link_acesso', models.URLField(blank=True, max_length=500, null=True, verbose_name='Link do Processo Eletrônico')),
                ('nivel_permissao', models.CharField(choices=[('PUBLICO', 'Público para a Equipe'), ('RESTRITO', 'Restrito ao Responsável e Envolvidos')], default='PUBLICO', max_length=20, verbose_name='Nível de Permissão')),
                ('resultado', models.CharField(blank=True, choices=[('PROCEDENTE', 'Procedente'), ('IMPROCEDENTE', 'Improcedente'), ('PARCIALMENTE', 'Parcialmente Procedente'), ('ACORDO', 'Acordo'), ('EXTINTO', 'Extinto sem mérito')], max_length=20, null=True, verbose_name='Resultado Final')),
                ('data_transito_em_julgado', models.DateField(blank=True, null=True, verbose_name='Data do Trânsito em Julgado')),
                ('execucao_iniciada', models.BooleanField(default=False, verbose_name='Execução Iniciada?')),
                ('valor_executado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Total Executado')),
                ('bloqueios_penhoras', models.JSONField(blank=True, help_text="Estrutura para registrar bloqueios. Ex: [{'sistema': 'SISBAJUD', 'valor': 1500.00}]", null=True, verbose_name='Bloqueios e Penhoras')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('advogado_responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Responsável')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tipo_acao', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.tipoacao', verbose_name='Classe Processual')),
            ],
            options={
                'verbose_name': 'historical processo',
                'verbose_name_plural': 'historical processos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Movimentacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('detalhes', models.TextField(blank=True, null=True)),
                ('data_publicacao', models.DateField(blank=True, null=True, verbose_name='Data da Publicação')),
                ('data_intimacao', models.DateField(blank=True, null=True, verbose_name='Data da Intimação')),
                ('data_inicio_prazo', models.DateField(blank=True, null=True, verbose_name='Primeiro Dia do Prazo')),
                ('data_prazo_final', models.DateField(blank=True, null=True, verbose_name='Data do Prazo Final')),
                ('dias_prazo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Dias de Prazo (manual)')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDA', 'Concluída')], default='PENDENTE', max_length=20)),
                ('hora_prazo', models.TimeField(blank=True, help_text='Preencha apenas para audiências ou eventos com hora marcada.', null=True, verbose_name='Horário')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('link_referencia', models.URLField(blank=True, help_text='Cole aqui o link para o andamento no sistema do tribunal, se houver.', max_length=500, null=True, verbose_name='Link de Referência')),
                ('responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movimentacoes_responsaveis', to=settings.AUTH_USER_MODEL)),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movimentacoes', to='gestao.processo')),
                ('tipo_movimentacao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestao.tipomovimentacao')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalMovimentacao',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('detalhes', models.TextField(blank=True, null=True)),
                ('data_publicacao', models.DateField(blank=True, null=True, verbose_name='Data da Publicação')),
                ('data_intimacao', models.DateField(blank=True, null=True, verbose_name='Data da Intimação')),
                ('data_inicio_prazo', models.DateField(blank=True, null=True, verbose_name='Primeiro Dia do Prazo')),
                ('data_prazo_final', models.DateField(blank=True, null=True, verbose_name='Data do Prazo Final')),
                ('dias_prazo', models.PositiveIntegerField(blank=True, null=True, verbose_name='Dias de Prazo (manual)')),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDA', 'Concluída')], default='PENDENTE', max_length=20)),
                ('hora_prazo', models.TimeField(blank=True, help_text='Preencha apenas para audiências ou eventos com hora marcada.', null=True, verbose_name='Horário')),
                ('data_criacao', models.DateTimeField(blank=True, editable=False)),
                ('link_referencia', models.URLField(blank=True, help_text='Cole aqui o link para o andamento no sistema do tribunal, se houver.', max_length=500, null=True, verbose_name='Link de Referência')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('processo', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.processo')),
                ('tipo_movimentacao', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.tipomovimentacao')),
            ],
            options={
                'verbose_name': 'historical movimentacao',
                'verbose_name_plural': 'historical movimentacaos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServico',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255, verbose_name='Descrição Detalhada do Serviço')),
                ('codigo_servico_municipal', models.CharField(blank=True, help_text='Ex: 01.07, 14.01, etc.', max_length=10, null=True, verbose_name='Cód. do Serviço Municipal (LC 116/03)')),
                ('data_inicio', models.DateField(default=datetime.date.today)),
                ('prazo', models.DateField(blank=True, null=True, verbose_name='Prazo de Conclusão')),
                ('concluido', models.BooleanField(default=False, verbose_name='Concluído')),
                ('data_encerramento', models.DateField(blank=True, null=True, verbose_name='Data de Encerramento (para recorrentes)')),
                ('recorrente', models.BooleanField(default=False, verbose_name='É um serviço recorrente (mensal)?')),
                ('ativo', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cliente', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Responsável pelo Serviço')),
                ('tipo_servico', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gestao.tiposervico')),
            ],
            options={
                'verbose_name': 'historical servico',
                'verbose_name_plural': 'historical servicos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='UsuarioPerfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, verbose_name='CPF')),
                ('oab', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nº da OAB (ex: 12345/PR)')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('data_admissao', models.DateField(blank=True, null=True, verbose_name='Data de Admissão')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='fotos_perfil/', verbose_name='Foto de Perfil')),
                ('cargo', models.CharField(blank=True, choices=[('ADVOGADO', 'Advogado(a)'), ('ESTAGIARIO', 'Estagiário(a)')], max_length=20, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
